version: "3.7"

services:
  web:
    image: registry.gitlab.com/sacovo/swiss-magic-wall:latest
    command: gunicorn -w 2 -k uvicorn.workers.UvicornH11Worker wall.asgi:application --bind 0.0.0.0:8000
    volumes:
      - static:/home/app/web/static
      - media:/home/app/web/media
    expose:
      - 8000
    env_file:
      - ./.env.example
    environment:
      - APPLY_MIGRATIONS="yes"

  nginx:
    image: registry.gitlab.com/sacovo/swiss-magic-wall:ngx
    expose:
      - 80
    volumes:
      - static:/home/app/web/static
    labels:
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.http.routers.wall.entrypoints=https"
      - "traefik.http.routers.wall.rule=Host(`yourdomain.tld`)"
      - "traefik.http.routers.wall.tls.certresolver=myhttpchallenge"
    networks:
      - default
      - web

  cache:
    image: memcached:alpine

  celery:
    image: registry.gitlab.com/sacovo/swiss-magic-wall:latest
    command: celery -A wall worker --loglevel WARNING
    volumes:
      - media:/home/app/web/media
    env_file:
      - ./.env.example

  celery-beat:
    image: registry.gitlab.com/sacovo/swiss-magic-wall:latest
    command: celery -A wall beat --loglevel WARNING --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - ./.env.example
    environment:
      - REDIS_HOST=redis

  redis:
    image: redis
    expose:
      - 6379

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.example

volumes:
  postgres_data:
  static:
  media:

networks:
  web:
    external: true
